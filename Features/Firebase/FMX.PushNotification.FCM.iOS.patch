diff -r C:\Program Files (x86)\Embarcadero\Studio\23.0\source\fmx\FMX.PushNotification.FCM.iOS.pas Z:\Kastri\Features\Firebase\FMX.PushNotification.FCM.iOS.pas
21c21,22
<   iOSapi.Foundation, iOSapi.UIKit, iOSapi.UserNotifications, iOSapi.FirebaseCommon, iOSapi.FirebaseMessaging, iOSapi.Helpers,
---
>   iOSapi.Foundation, iOSapi.UIKit, iOSapi.UserNotifications, iOSapi.Helpers,
>   DW.iOSapi.FirebaseCore, DW.iOSapi.FirebaseMessaging, DW.FCMManager,
41d41
<     procedure ReceivedMessage(remoteMessage: FIRMessagingRemoteMessage);
44,50c44
<     procedure applicationReceivedRemoteMessage(remoteMessage: FIRMessagingRemoteMessage); cdecl;
<     [MethodName('messaging:didReceiveMessage:')]
<     procedure didReceiveMessage(messaging: FIRMessaging; remoteMessage: FIRMessagingRemoteMessage); cdecl;
<     [MethodName('messaging:didRefreshRegistrationToken:')]
<     procedure didRefreshRegistrationToken(messaging: FIRMessaging; fcmToken: NSString); cdecl;
<     [MethodName('messaging:didReceiveRegistrationToken:')]
<     procedure didReceiveRegistrationToken(messaging: FIRMessaging; fcmToken: NSString); cdecl;
---
>     procedure messaging(messaging: FIRMessaging; didReceiveRegistrationToken: NSString); cdecl;
159,169c153
< procedure TFIRMessagingDelegate.applicationReceivedRemoteMessage(remoteMessage: FIRMessagingRemoteMessage);
< begin
<   ReceivedMessage(remoteMessage);
< end;
< 
< procedure TFIRMessagingDelegate.didReceiveMessage(messaging: FIRMessaging; remoteMessage: FIRMessagingRemoteMessage);
< begin
<   ReceivedMessage(remoteMessage);
< end;
< 
< procedure TFIRMessagingDelegate.didReceiveRegistrationToken(messaging: FIRMessaging; fcmToken: NSString);
---
> procedure TFIRMessagingDelegate.messaging(messaging: FIRMessaging; didReceiveRegistrationToken: NSString);
171,181c155
<   FPushService.SetDeviceToken(NSStrToStr(fcmToken));
< end;
< 
< procedure TFIRMessagingDelegate.didRefreshRegistrationToken(messaging: FIRMessaging; fcmToken: NSString);
< begin
<   FPushService.SetDeviceToken(NSStrToStr(fcmToken));
< end;
< 
< procedure TFIRMessagingDelegate.ReceivedMessage(remoteMessage: FIRMessagingRemoteMessage);
< begin
<   FPushService.MessageReceived(NSDictionaryToJSON(remoteMessage.appData));
---
>   FPushService.SetDeviceToken(NSStrToStr(didReceiveRegistrationToken));
253d226
<   TFIRApp.OCClass.configure;
262c235
<   FreeAndNil(FFIRMessagingDelegate);
---
>   FFIRMessagingDelegate.Free;
269d241
<   Register;
270a243
>   Register;
340c313
<   LSettings := TUIUserNotificationSettings.Wrap(TUIUserNotificationSettings.OCClass.settingsForTypes(FAuthOptions, nil));
---
>   LSettings := TUIUserNotificationSettings.Wrap(TUIUserNotificationSettings.OCClass.settingsForTypes(FCM.GetNativeAuthOptions, nil));
